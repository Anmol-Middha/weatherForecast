'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = desugarNext;

var _Routes = require('./Routes');

function desugarNext(junctionSet, _next) {
  if (_next.length && !(_next[0] == undefined && _next.length == 1)) {
    if (!_next[0] || _next[0] instanceof _Routes.Route) {
      // Find the junction keys of the passed in routes by looking through the available next of
      // the passed in branch. Use these junction keys to build a route set.
      if (!junctionSet) {
        throw new Error('You attempted to pass child routes when no child junctions are available');
      }

      var next = _next.filter(function (child) {
        return child;
      });
      var routeSet = {};

      var childBranches = next.map(function (child) {
        return child.branch;
      });
      var junctionKeys = junctionSet.$$junctionSetMeta.junctionKeys;

      outer: for (var i = 0, len = junctionKeys.length; i < len; i++) {
        var junctionKey = junctionKeys[i];
        var junction = junctionSet[junctionKey];
        var branchKeys = Object.keys(junction);
        for (var j = 0, _len = branchKeys.length; j < _len; j++) {
          var branch = junction[branchKeys[j]];
          var branchIndex = childBranches.indexOf(branch);
          if (branchIndex !== -1) {
            routeSet[junctionKey] = next[branchIndex];
            next.splice(branchIndex, 1);
            childBranches.splice(branchIndex, 1);
            if (next.length === 0) {
              break outer;
            }
            continue outer;
          }
        }
      }

      if (next.length) {
        throw new Error('A child route with key "' + next[0].branch.key + '" passed to createRoute could not be found in the passed-in branch\'s next.');
      }

      return routeSet;
    } else {
      return _next[0];
    }
  }
  return {};
}