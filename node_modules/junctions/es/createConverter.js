'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createConverter;

var _getLocationFromRouteSet = require('./getLocationFromRouteSet');

var _getLocationFromRouteSet2 = _interopRequireDefault(_getLocationFromRouteSet);

var _getRouteSetFromLocation = require('./getRouteSetFromLocation');

var _getRouteSetFromLocation2 = _interopRequireDefault(_getRouteSetFromLocation);

var _PathParser = require('./PathParser');

var _hyphenize = require('./utils/hyphenize');

var _hyphenize2 = _interopRequireDefault(_hyphenize);

var _JunctionSet = require('./JunctionSet');

var _JunctionSet2 = _interopRequireDefault(_JunctionSet);

var _SearchUtils = require('./utils/SearchUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createConverter(junctionSetOptions) {
  var baseLocation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { pathname: '/' };

  var junctionSet = (0, _JunctionSet2.default)(junctionSetOptions);

  var parsePath = (0, _PathParser.createPathParser)(junctionSet);
  var baseLocationWithQuery = Object.assign({}, baseLocation, { query: (0, _SearchUtils.parseSearch)(baseLocation.search) });

  return {
    locate: function locate() {
      for (var _len = arguments.length, next = Array(_len), _key = 0; _key < _len; _key++) {
        next[_key] = arguments[_key];
      }

      if (next.length === 0) return baseLocation;

      var location = (0, _getLocationFromRouteSet2.default)(baseLocationWithQuery, true, [], junctionSet, next);
      location.search = (0, _SearchUtils.createSearch)(location.query);
      delete location.query;
      return Object.freeze(location);
    },
    route: function route(location) {
      var locationWithQuery = Object.assign({}, location, { query: (0, _SearchUtils.parseSearch)(location.search) });
      return (0, _getRouteSetFromLocation2.default)(parsePath, baseLocationWithQuery, junctionSet, locationWithQuery);
    }
  };
}